{"version":3,"sources":["components/Clock.tsx","components/index.ts","App.tsx","index.tsx"],"names":["Clock","state","time","Date","timerId","setInterval","this","setState","console","log","toLocaleTimeString","clearInterval","name","props","toLocaleString","React","Component","getRandom","Math","floor","random","App","isVisible","number","setShow","setHide","getChangeNumber","className","type","onClick","disabled","ReactDOM","render","document","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,EAKEC,QAAwBC,aAAY,cAAU,KALhD,uDAOE,WAAqB,IAAD,OAClBC,KAAKF,QAAUC,aAAY,WACzB,EAAKE,SAAS,CAAEL,KAAM,IAAIC,OAE1BK,QAAQC,IAAI,EAAKR,MAAMC,KAAKQ,sBAC3B,OAZP,kCAeE,WACEC,cAAcL,KAAKF,WAhBvB,oBAmBE,WACE,IAAQF,EAASI,KAAKL,MAAdC,KACAU,EAASN,KAAKO,MAAdD,KAER,OACE,qCACE,+CACA,6BACGV,EAAKY,mBAER,sDACqBF,YA9B7B,GAA2BG,IAAMC,WCRlBhB,ICQTiB,EAAY,WAChB,OAAOC,KAAKC,MAAsB,IAAhBD,KAAKE,WAGnBC,E,4MACJpB,MAAQ,CACNqB,WAAW,EACXC,OAAQ,G,EAGVC,QAAU,WACR,EAAKjB,SAAS,CACZe,WAAW,K,EAIfG,QAAU,WACR,EAAKlB,SAAS,CACZe,WAAW,K,EAIfI,gBAAkB,WAChB,EAAKnB,SAAS,CACZgB,OAAQN,O,4CAIZ,WACE,MAA8BX,KAAKL,MAA3BqB,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,OAEnB,OACE,sBAAKI,UAAU,MAAf,UACE,uCACA,8BACIL,GAAa,cAAC,EAAD,CAAOV,KAAMW,MAE9B,gCACE,wBACEK,KAAK,SACLC,QAASvB,KAAKkB,QAFhB,wBAMA,wBACEI,KAAK,SACLC,QAASvB,KAAKmB,QAFhB,2BAOF,wBACEG,KAAK,SACLC,QAASvB,KAAKoB,gBACdI,UAAWR,EAHb,+B,GA/CUP,IAAMC,WA2DTK,ICtEfU,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.7ad5f095.chunk.js","sourcesContent":["import React from 'react';\n\ntype ClockState = {\n  time: Date;\n};\n\ntype ClockProps = {\n  name: number;\n};\n\nexport class Clock extends React.Component<ClockProps, ClockState> {\n  state = {\n    time: new Date(),\n  };\n\n  timerId: NodeJS.Timer = setInterval(() => {}, 1000);\n\n  componentDidMount() {\n    this.timerId = setInterval(() => {\n      this.setState({ time: new Date() });\n      // eslint-disable-next-line no-console\n      console.log(this.state.time.toLocaleTimeString);\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    const { time } = this.state;\n    const { name } = this.props;\n\n    return (\n      <>\n        <h2>Current time:</h2>\n        <h2>\n          {time.toLocaleString()}\n        </h2>\n        <h2>\n          {`Random number: ${name}`}\n        </h2>\n      </>\n    );\n  }\n}\n","import { Clock } from './Clock';\n\nexport default Clock;\n","import React from 'react';\nimport './App.scss';\n\nimport Clock from './components';\n\ntype State = {\n  isVisible: boolean,\n  number: number,\n};\n\nconst getRandom = ():number => {\n  return Math.floor(Math.random() * 100);\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    isVisible: true,\n    number: 2,\n  };\n\n  setShow = () => {\n    this.setState({\n      isVisible: true,\n    });\n  };\n\n  setHide = () => {\n    this.setState({\n      isVisible: false,\n    });\n  };\n\n  getChangeNumber = () => {\n    this.setState({\n      number: getRandom(),\n    });\n  };\n\n  render() {\n    const { isVisible, number } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>CLOCK</h1>\n        <div>\n          { isVisible && <Clock name={number} /> }\n        </div>\n        <div>\n          <button\n            type=\"button\"\n            onClick={this.setShow}\n          >\n            Show Clock\n          </button>\n          <button\n            type=\"button\"\n            onClick={this.setHide}\n          >\n            Hide Clock\n          </button>\n        </div>\n        <button\n          type=\"button\"\n          onClick={this.getChangeNumber}\n          disabled={!isVisible}\n        >\n          Get Random\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}